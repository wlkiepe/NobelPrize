# -*- coding: utf-8 -*-
"""Copy of Day78_NobelPize

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12BU8H9TnRr8lRpkEDZ3K3l5EWxe0d46P
"""

import pandas as pd
import matplotlib.pyplot as plt
import plotly.express as px
import numpy as np

# Commented out IPython magic to ensure Python compatibility.
# %pip install --upgrade plotly

df_data = pd.read_csv('nobel_prize_data.csv')
df_data.head()

df_data.shape

df_data.tail()

df_data.info()

df_data.duplicated().values.any()

df_data.isna().sum()

df_data.birth_date = pd.to_datetime(df_data.birth_date)

df_data.info()

separated_values = df_data.prize_share.str.split('/', expand=True)
numerator = pd.to_numeric(separated_values[0])
denomenator = pd.to_numeric(separated_values[1])
df_data['share_pct'] = numerator / denomenator



df_data[df_data.sex == 'Female'].sort_values('year').head()

is_winner = df_data.duplicated(subset=['full_name'], keep=False)
multiple_winners = df_data[is_winner]
multiple_winners.nunique()

df_data.category.nunique()

prizes_per_category = df_data.category.value_counts()
bar_chart = px.bar(x=prizes_per_category.index,
                   y=prizes_per_category.values)
bar_chart.show()

df_data[df_data.category == 'Economics'].head()

cat_men_women = df_data.groupby(['category', 'sex'], 
                               as_index=False).agg({'prize': pd.Series.count})
cat_men_women.sort_values('prize', ascending=False, inplace=True)
cat_men_women

sex_plot = px.bar(x=cat_men_women.category,
                  y=cat_men_women.prize,
                  color=cat_men_women.sex)
sex_plot.show()

df_data.year.value_counts()



prize_per_year = df_data.groupby(by='year').count().prize 
prize_per_year

rolling_data = prize_per_year.rolling(5).mean()

plt.figure(figsize=(16,8), dpi=200)
plt.title('Number of Nobel Prizes Awarded per Year', fontsize=18)
plt.yticks(fontsize=14)
plt.xticks(ticks=np.arange(1900, 2021, step=5), 
           fontsize=14, 
           rotation=45)
 
ax = plt.gca() # get current axis
ax.set_xlim(1900, 2020)
 
plt.scatter(x=prize_per_year.index, 
           y=prize_per_year.values, 
           c='dodgerblue',
           alpha=0.7,
           s=100,)
 
plt.plot(prize_per_year.index, 
        rolling_data.values, 
        c='crimson', 
        linewidth=3,)

df_data.info()

yearly_avg_share = df_data.groupby(by='year').agg({'share_pct': pd.Series.mean})
rolling_share = yearly_avg_share.rolling(window=5).mean()
rolling_share.describe()

plt.figure(figsize=(16,8), dpi=200)
plt.title('Number of Nobel Prizes Awarded per Year', fontsize=18)
plt.yticks(fontsize=14)
plt.xticks(ticks=np.arange(1900, 2021, step=5), 
           fontsize=14, 
           rotation=45)
 
 
ax1 = plt.gca()
ax2 = ax1.twinx() # create second y-axis
ax2.invert_yaxis()
ax1.set_xlim(1900, 2020)
 
ax1.scatter(x=prize_per_year.index, 
           y=prize_per_year.values, 
           c='dodgerblue',
           alpha=0.7,
           s=100,)
 
ax1.plot(prize_per_year.index, 
        rolling_data.values, 
        c='dodgerblue',
        alpha=0.7,
        )
 
# Adding prize share plot on second axis
ax2.plot(prize_per_year.index, 
        rolling_share.values, 
        c='grey', 
        linewidth=3,)

top20_orgs = df_data.organization_name.value_counts()[:20]
top20_orgs.sort_values(ascending=True, inplace=True)
top20_orgs.head()

px.bar(x = top20_orgs.values,
      y = top20_orgs.index,
      orientation='h',
      color=top20_orgs.values,
      color_continuous_scale=px.colors.sequential.Tealgrn,
      title='Top 20 Research Institutions by Number of Prizes')

top20_cities = df_data.organization_city.value_counts()[:20]

top20_cities.head()

px.bar(top20_cities)



